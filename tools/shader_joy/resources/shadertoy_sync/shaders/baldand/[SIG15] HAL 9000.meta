{
	"Shader": {
		"ver": "0.1",
		"info": {
			"id": "MtsSzS",
			"date": "1438632644",
			"viewed": 746,
			"name": "[SIG15] HAL 9000",
			"username": "baldand",
			"description": "My entry for Shadertoy Competition 2015 [SIG15]: <br/><br/>A tribute to HAL 9000, from Stanley Kubrick's film \"2001: A Space Odyssey\" <br/>",
			"likes": 13,
			"published": 3,
			"flags": 8,
			"tags": [
				"3d",
				"raymarching",
				"sound",
				"fonts",
				"sig15"
			],
			"hasliked": 0
		},
		"renderpass": [
			{
				"inputs": [
					{
						"id": 24,
						"src": "/presets/cube02_0.jpg",
						"ctype": "cubemap",
						"channel": 0
					}
				],
				"outputs": [
					{
						"channel": "0",
						"dst": "-1"
					}
				],
				"code": "",
				"name": "",
				"description": "",
				"type": "image"
			},
			{
				"inputs": [],
				"outputs": [],
				"code": "// Copyright (c) 2015 Andrew Baldwin (baldand)\n// License = Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) (http://creativecommons.org/licenses/by-sa/4.0/)\n\n// Audio for HAL 9000 - tries to be similar profile to background ship noise of Discovery scenes\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 fat(vec3 p)\n{\n    if (p.z==0.) {\n    float f = 5000.+exp2(15.*rand(p.xy));\n    float a = .00003*5000./f*rand(vec2(p.x,p.y+1.));\n    return vec2(f,a);\n    } else if (p.z==1.) {\n    float f = 150.+exp2(8.*rand(p.xy));\n    float a = .0005*150./f*rand(vec2(p.x,p.y+1.));\n    return vec2(f,a);\n    }\n}\n\nfloat frame(float framebase, float frametime, float arg) \n{\n    float pi2 = 6.283185307179586476925286766559;\n    float s = 0.0;\n    for (int h=0;h<100;h++) {\n        vec2 fa = fat(vec3(framebase,float(h),arg));\n        s += fa.y*sin(pi2*fract(fa.x*(frametime+framebase)));\n    }\n    return s;\n}\n\nfloat gen(float time,float fps,float ifps,float arg) \n{\n    float framebase = floor(time*fps)*ifps;\n    float frametime = time-framebase;\n    float acc = 0.;\n    acc += 1.*(frame(framebase,frametime,arg)) + mix(frame(framebase-ifps,frametime+ifps,arg),frame(framebase+ifps,frametime-ifps,arg),smoothstep(0.,1.,frametime*fps));\n    return acc;\n}\n\nvec2 mainSound(float time)\n{\n    float fps = 10000.0;\n    float ifps = .0001;\n    float acc = gen(time+10.,10000.,.0001,0.);\n    acc += gen(time+10.,100.,.01,1.);\n    return vec2(acc);\n}",
				"name": "",
				"description": "",
				"type": "sound"
			}
		]
	}
}