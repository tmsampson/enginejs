{
	"Shader": {
		"ver": "0.1",
		"info": {
			"id": "MtfGWM",
			"date": "1422374802",
			"viewed": 539,
			"name": "Holy Grail Quest II",
			"username": "eiffie",
			"description": "I have been following DarkBeam as he digs up old formulas on fractalforums.com. This one needed work to make it continuous. It has lots of interesting julias.",
			"likes": 16,
			"published": 3,
			"flags": 0,
			"tags": [
				"3dmandelbrot"
			],
			"hasliked": 0
		},
		"renderpass": [
			{
				"inputs": [],
				"outputs": [],
				"code": "",
				"name": "",
				"description": "",
				"type": "image"
			},
			{
				"inputs": [],
				"outputs": [],
				"code": "#define bps 6.0\nfloat nofs(float n){//the song's \"random\" ring\n    n=mod(n,8.0);\n    if(n<1.0)return 0.0;\n    if(n<2.0)return 1.0;\n    if(n<3.0)return 2.0;\n    if(n<4.0)return 3.0;\n    if(n<5.0)return -3.0;\n    if(n<6.0)return -2.0;\n    if(n<7.0)return -1.0;\n    return 0.0;\n}\n\nfloat scale(float note){//throws out dissonant tones\n\tfloat n2=mod(note,12.0);\n\t//if((n2==1.0)||(n2==3.0)||(n2==6.0)||(n2==8.0)||(n2==10.0))note=-100.0;//major\n\t//if((n2==1.0)||(n2==4.0)||(n2==6.0)||(n2==9.0)||(n2==11.0))note=-100.0;//minor\n\tif((n2==1.0)||(n2==4.0)||(n2==5.0)||(n2==9.0)||(n2==10.0))note=-100.0;//hungarian minor\n\tif(note>84.0)note=84.0+n2;\n\treturn note;\n}\n#define TAO 6.283185\n// note number to frequency  from https://www.shadertoy.com/view/ldfSW2\n//float ntof(float n){if(n<12.0)return 0.0;return 440.0 * pow(2.0, (n - 67.0) / 12.0);}\n\nfloat ntof(float note){//note frequencies from wikipedia\n\tif(note<12.0)return 0.0;\n\tfloat octave=floor((note+0.5)/12.0)-5.0;\n\tnote=mod(note,12.0);\n\tfloat nt=493.88;\n    if(note<0.5)nt=261.63;\n\telse if(note<1.5)nt=277.18;\n\telse if(note<2.5)nt=293.66;\n    else if(note<3.5)nt=311.13;\n    else if(note<4.5)nt=329.63;\n    else if(note<5.5)nt=349.23;\n    else if(note<6.5)nt=369.99;\n    else if(note<7.5)nt=392.0;\n    else if(note<8.5)nt=415.30;\n    else if(note<9.5)nt=440.0;\n    else if(note<10.5)nt=466.16;\n\treturn nt*pow(2.0,octave);\n}\n\n\nfloat ssaw(float t){return 4.0*abs(fract(t)-0.5)-1.0;}\nfloat rnd(float t){return fract(sin(t*341.545234)*1531.2341);}\nfloat srnd(float t){float t2=fract(t);return mix(rnd(floor(t)),rnd(floor(t+1.0)),t2*t2*(3.0-2.0*t2));}\nfloat harm(float x,float ps,float hm,float sp){//phase shift, harmonics, spacing\n\tfloat a2=0.0,s=1.0;\n\tfor(int i=0;i<10;i++){\n\t\tif(i<int(hm)){\n\t\t\ta2+=sin((x*s+ps)*TAO)/s;\n\t\t\ts+=sp;\n\t\t}\n\t}\n\treturn a2*0.5;\n}\nvec2 inst(float n,float t,float bt,float pan,int i){\n\tfloat f=ntof(scale(n)),ps=0.0,hm=0.0,sp=1.0;\n\tif(f<12.0)return vec2(0.0);\t\n\tif(i==0){ps=pow(bt*0.5,0.25)*0.2;hm=9.0;}\n\telse if(i==1){ps=bt*0.5;hm=4.0;sp=0.5;}\n\telse if(i==9){ps=bt*rnd(t);hm=10.0-4.0*bt;f*=0.5+0.5*rnd(t);}\n\tfloat a=harm(f*t,ps,hm,sp);\n\ta*=exp(-bt*(0.9+float(i)))*min(min(bt,2.0-bt)*100.0,1.0)*60.0/n;\n\treturn vec2(a*(1.0-pan),a*pan);\n}\nvec2 inst2(float nn,float no,float of,float t,float bt,float pan,int i){\n\treturn inst(nn+of,t,bt,pan,i)+inst(no+of,t,bt+1.0,pan,i);//plays new note and tail of last note\n}\nvec2 mainSound(float time)\n{\n\tfloat tim=time*bps;\n\tif(tim>128.0 && tim<256.0)tim=224.0-tim;\n\tfloat b=floor(tim);\n\tfloat t0=fract(tim),t1=mod(tim,2.0)*0.5,t2=mod(tim,4.0)*0.25;\n\tfloat n2=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tfloat n1=n2+nofs(b*0.5),n0=n1+nofs(b);\n\tb-=1.0;//go back in time to finish old notes\n\tfloat n5=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tfloat n4=n5+nofs(b*0.5),n3=n4+nofs(b);\n\tvec2 a0=inst2(n0,n3,72.0,time,t0,0.8,0);\n\tb-=1.0;\n\tn5=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tn4=n5+nofs(b*0.5);\n\tvec2 a1=inst2(n1,n4,60.0,time,t1,0.5,0);\n\tvec2 a1h=inst2(n1,n4,57.0,time,t1,0.6,0);\n\tb-=2.0;\n\tn5=nofs(b*0.0625)+nofs(b*0.125)+nofs(b*0.25);\n\tvec2 a2=inst2(n2,n5,36.0,time,t2,0.2,0);\n\t//vec2 a2h=vec2(0.0);//inst2(n2,n5,53.0,time,t2,0.25,0);\n\t//vec2 a1hb=inst(n1+64.0,time,t1,0.0,1)*2.0;\n\tvec2 v=0.25*(a0+a1+a1h+a2);\n\treturn clamp(v,-1.0,1.0);\n}\n",
				"name": "",
				"description": "",
				"type": "sound"
			}
		]
	}
}