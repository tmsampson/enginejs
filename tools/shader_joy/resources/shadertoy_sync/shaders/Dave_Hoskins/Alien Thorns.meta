{
	"Shader": {
		"ver": "0.1",
		"info": {
			"id": "XsSSzD",
			"date": "1409348200",
			"viewed": 6258,
			"name": "Alien Thorns",
			"username": "Dave_Hoskins",
			"description": "3D voronoi cells twisted into each other. I Managed to get the texture to move with the voronoi objects. They also slowly change colour.",
			"likes": 19,
			"published": 3,
			"flags": 8,
			"tags": [
				"3d",
				"raymarching",
				"voronoi",
				"sound",
				"alienthorns"
			],
			"hasliked": 0
		},
		"renderpass": [
			{
				"inputs": [
					{
						"id": 2,
						"src": "/presets/tex01.jpg",
						"ctype": "texture",
						"channel": 2
					},
					{
						"id": 4,
						"src": "/presets/tex03.jpg",
						"ctype": "texture",
						"channel": 1
					},
					{
						"id": 8,
						"src": "/presets/tex07.jpg",
						"ctype": "texture",
						"channel": 0
					},
					{
						"id": 30,
						"src": "/presets/tex16.png",
						"ctype": "texture",
						"channel": 3
					}
				],
				"outputs": [
					{
						"channel": "0",
						"dst": "-1"
					},
					{
						"channel": "0",
						"dst": "-1"
					},
					{
						"channel": "0",
						"dst": "-1"
					},
					{
						"channel": "0",
						"dst": "-1"
					}
				],
				"code": "",
				"name": "",
				"description": "",
				"type": "image"
			},
			{
				"inputs": [
					{
						"id": 30,
						"src": "/presets/tex16.png",
						"ctype": "texture",
						"channel": 0
					}
				],
				"outputs": [
					{
						"channel": "0",
						"dst": "-1"
					}
				],
				"code": "#define PI 3.14159265359\n\n#define MOD3 vec3(.0631,.07369,.08787)\nfloat gTime;\n\n//--------------------------------------------------------------------------------------------------\nvec2 Hash2(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * MOD3);\n    p3 += dot(p3.zxy, p3.yxz+19.19);\n    return fract(vec2(p3.x * p3.y, p3.z*p3.x));\n}\n\n//--------------------------------------------------------------------------------------------------\nvec2 Noise( in vec2 x )\n{\n    return mix(Hash2(floor(x)), Hash2(floor(x)+1.0), fract(x));\n}\n\nfloat Saw(float n, float fil)\n{\n\tfloat v = 0.0;\n\tfloat f = 1.0;\n    int filter = int((fil));\n    \n\tfor (int i = 0; i < 100; i++)\n\t{\n        if (i > filter) break;\n        float a = .5*(sin(2.0*f*n * PI) / f);\n        if (i > filter-filter/10) a = 2.5 * a;\n        v += a;\n        \n\t\tf++;\n\t}\n\treturn v* 2000.0 / (fil+1000.0);\n}\n\n\nvec2 Hash( vec2 n)\n{\n\tvec4 p = texture2D( iChannel0, n*vec2(.78271, .32837), -100.0 );\n    return (p.xy + p.zw) * .5; \n}\n\n//--------------------------------------------------------------------------\nvec2 Noise2D( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    vec2 res = mix(mix( Hash(p + 0.0), Hash(p + vec2(1.0, 0.0)),f.x),\n                   mix( Hash(p + vec2(0.0, 1.0) ), Hash(p + vec2(1.0, 1.0)),f.x),f.y);\n    return res-.5;\n}\n\n//--------------------------------------------------------------------------\nvec2 FBM( vec2 p )\n{\n    vec2 f;\n\tf  = 0.5000\t * Noise2D(p); p = p * 2.32;\n\tf += 0.2500  * Noise2D(p); p = p * 2.23;\n\tf += 0.1250  * Noise2D(p); p = p * 2.31;\n    f += 0.0625  * Noise2D(p); p = p * 2.28;\n    f += 0.03125 * Noise2D(p);\n    return f;\n}\n\n\n//--------------------------------------------------------------------------------------------------\nvec4 ThornVoronoi( vec3 p)\n{\n    \n    vec2 f = fract(p.xz);\n    p.xz = floor(p.xz);\n\tfloat d = 1.0e10;\n    vec3 id = vec3(0.0);\n    \n\tfor (int xo = -1; xo <= 1; xo++)\n\t{\n\t\tfor (int yo = -1; yo <= 1; yo++)\n\t\t{\n            vec2 g = vec2(xo, yo);\n            vec2 n = texture2D(iChannel3,(p.xz + g+.5)/256.0, -100.0).xy;\n            n = n*n*(3.0-2.0*n);\n            \n\t\t\tvec2 tp = g + .5 + sin(p.y + 1.2831 * (n * gTime*.5)) - f;\n            float d2 = dot(tp, tp);\n\t\t\tif (d2 < d)\n            {\n                // 'id' is the colour code for each thorn\n                d = d2;\n\n                id = vec3(tp.x, p.y, tp.y);\n            }\n\t\t}\n\t}\n\n    return vec4(id, 1.35-pow(d, .17));\n}\n\n\n//--------------------------------------------------------------------------------------------------\nfloat MapThorns( in vec3 pos )\n{\n\treturn pos.y * .21 - ThornVoronoi(pos).w  - max(pos.y-5.0, 0.0) * .5 + max(pos.y-5.5, 0.0) * .8;\n}\n\n//--------------------------------------------------------------------------------------------------\nvec3 Path( float time )\n{\n\t\treturn vec3(1.3+ 17.2*cos(0.2-0.5*.33*time*.75), 4.7, 7.6 - 16.2*sin(0.5*0.11*time*.75) );\n}\n//--------------------------------------------------------------------------------------------------\nvec2 mainSound(float time)\n{\n    gTime = time+173.0;\n\t\n    vec3 ro = Path(gTime+.0);\n    vec3 ta = Path(gTime + 5.2);\n    float add = (sin(gTime*.3)+1.0)*2.0;\n     ro.y+= add;\n    ta.y -= add;\n    \n    vec3 cw = normalize(ta-ro);\t\t// Point down movement line\n\tvec3 cp = vec3(0.0, 1.0, 0.0);\t// Up vector\n    vec3 cu = (cross(cw, cp));\t\t// Cross product to get the right ear direction\n    \n    vec2 ears;\n    ears.x = abs(MapThorns(ro+cu*.1)) * .8;\n    ears.y = abs(MapThorns(ro-cu*.1)) * .8;\n    \n    vec2 gain = vec2(0.0);\n    gain = clamp(1. - ears, 0.0, 1.0);\n    gain = pow(gain, vec2(3.9));\n    \n    float fil1 = sin(gTime*.521)* 50.0 + 60.0;\n    float fil2 = -sin(gTime*.474)* 50.0 + 60.0;\n    vec2 audio;\n    audio.x = gain.x * (Saw(11.125*time, fil1) + Saw(22.2*time, fil1));\n    audio.y = gain.y * (Saw(11.125*time, fil2) + Saw(22.3*time, fil2));\n    vec2 pos = vec2(gTime * (192.017331), gTime * (182.066927));\n    pos -= sin((gTime*.143))*20.0 * (gain.x+gain.y);\n    audio += FBM(pos) * Saw(gTime*10.5 -sin(gTime * .2)* 8.0, 30.0) ;\n    \n    return clamp(audio, -1.0, 1.0) * smoothstep(60.01, 55.0, time);\n}",
				"name": "",
				"description": "",
				"type": "sound"
			}
		]
	}
}