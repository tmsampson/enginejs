{
	"Shader": {
		"ver": "0.1",
		"info": {
			"id": "XsSSRW",
			"date": "1409422111",
			"viewed": 5217,
			"name": "Abandoned base",
			"username": "reinder",
			"description": "My entry to the in-official, nonexistent st mine compo <img src=\"/img/emoticonHappy.png\"/> If you like shiny things, define 'GOLD' at line 3. Use your mouse to look around.",
			"likes": 70,
			"published": 3,
			"flags": 8,
			"tags": [
				"raymarching",
				"distancefield",
				"water",
				"reflections"
			],
			"hasliked": 0
		},
		"renderpass": [
			{
				"inputs": [
					{
						"id": 3,
						"src": "/presets/tex02.jpg",
						"ctype": "texture",
						"channel": 0
					}
				],
				"outputs": [
					{
						"channel": "0",
						"dst": "-1"
					}
				],
				"code": "",
				"name": "",
				"description": "",
				"type": "image"
			},
			{
				"inputs": [
					{
						"id": 30,
						"src": "/presets/tex16.png",
						"ctype": "texture",
						"channel": 0
					}
				],
				"outputs": [
					{
						"channel": "0",
						"dst": "-1"
					}
				],
				"code": "//----------------------------------------------------------------------\n// noises\n\nfloat hash( float n ) {\n    return fract(sin(n)*43758.5453123);\n}\n\nfloat noise( in vec2 x ) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*157.0;\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n               mix( hash(n+157.0), hash(n+158.0),f.x),f.y);\n}\n\nconst mat2 m2 = mat2( 0.80, -0.60, 0.60, 0.80 );\n\nfloat fbm( vec2 p ) {\n    float f = 0.0;\n    f += 0.5000*noise( p ); p = m2*p*2.32;\n    f += 0.2500*noise( p ); p = m2*p*2.23;\n    f += 0.1250*noise( p ); p = m2*p*2.31;\n    f += 0.0625*noise( p ); p = m2*p*2.21;\n    f += 0.03125*noise( p );\n  \n    return f;\n}\n\n//----------------------------------------------------------------------\n// Wind function by Dave Hoskins https://www.shadertoy.com/view/4ssXW2\n\nvec2 Hash( vec2 n)\n{\n\tvec4 p = texture2D( iChannel0, n*vec2(.78271, .32837), -100.0 );\n    return (p.xy + p.zw) * .5; \n}\n\n\n//--------------------------------------------------------------------------\nvec2 Noise( in vec2 x ) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    vec2 res = mix(mix( Hash(p + 0.0), Hash(p + vec2(1.0, 0.0)),f.x),\n                   mix( Hash(p + vec2(0.0, 1.0) ), Hash(p + vec2(1.0, 1.0)),f.x),f.y);\n    return res-.5;\n}\n\n//--------------------------------------------------------------------------\nvec2 FBM( vec2 p ) {\n    vec2 f;\n\tf  = 0.5000\t * Noise(p); p = p * 2.32;\n\tf += 0.2500  * Noise(p); p = p * 2.23;\n\tf += 0.1250  * Noise(p); p = p * 2.31;\n    f += 0.0625  * Noise(p); p = p * 2.28;\n    f += 0.03125 * Noise(p);\n    return f;\n}\n\n//--------------------------------------------------------------------------\nvec2 Wind(float n) {\n    vec2 pos = vec2(n * (162.017331), n * (132.066927));\n    vec2 vol = Noise(vec2(n*23.131, -n*42.13254))*1.0 + 1.0;\n    \n    vec2 noise = vec2(FBM(pos*33.313))* vol.x *.5 + vec2(FBM(pos*4.519)) * vol.y;\n    \n\treturn noise;\n}\n\n//----------------------------------------------------------------------\n\nvec2 getSectorId( float z ) {\n    float id = floor( (z+6.)/12.);\n    return vec2( id, hash(id) );\n}\n\nfloat soundLampExist(in float z) {\n    vec2 id = getSectorId(z);\n    if( hash(id.x+234.) < 0.15 && id.y < 0.75) return 1.;\n\treturn 0.;\n}\n\nfloat soundCeilExist(in float z) { \n    vec2 id = getSectorId(z);\n    if( id.y < 0.75) return 0.;\n\treturn 1.;\n}\n\nvec2 soundLamp(in float t) {\n    float l = 1. - clamp(2.*fbm( vec2(t*10., 2.) ), 0., 1.);\n\treturn 0.1*vec2( hash(t*0.001), hash(t*0.001+0.1) ) * l;\n}\n\nvec2 soundCeil(in float t) {\n\treturn (Wind(t*0.025) + Wind(t*4.)*0.15) * (0.75+0.2*sin(t*8.));\n}\n\nvec2 soundStep(in float t) {\n    float o = 0.2*noise(vec2(t,0.));\n    float i = fract(t*1.23+o);\n    \n    return Wind(t*0.025) * clamp(i*10.,0.,1.) * clamp(1.-i*6., 0., 1.);\n}\n\nvec2 getSound(in vec2 sl, in vec2 sc, in float z) {\n    return 0.9*soundLampExist(z)*sl + 0.2*soundCeilExist(z)*sc;\n}\n\nvec2 mixSounds(in float t, in float z) {\n    float zm = floor( (z+6.)/12. ) * 12.;\n    \n    vec2 sound = vec2(0.);\n    vec2 sl = soundLamp(t);\n    vec2 sc = soundCeil(t);\n    \n    sound += getSound(sl, sc, zm-24.) * pow( mix(1., 0., clamp( abs(zm-24. - z)/24., 0., 1. ) ), 2.);\n    sound += getSound(sl, sc, zm+24.) * pow( mix(1., 0., clamp( abs(zm+24. - z)/24., 0., 1. ) ), 2.);\n    sound += getSound(sl, sc, zm-12.) * pow( mix(1., 0., clamp( abs(zm-12. - z)/24., 0., 1. ) ), 2.);\n    sound += getSound(sl, sc, zm+12.) * pow( mix(1., 0., clamp( abs(zm+12. - z)/24., 0., 1. ) ), 2.);\n    sound += getSound(sl, sc, zm)     * pow( mix(1., 0., clamp( abs(zm - z)/24., 0., 1. ) ), 2.);\n    \n    return sound + soundStep(t);    \n}\n\nvec2 getSounds(in float t, in float z) {\n    vec2 m2 = mixSounds(t, z); \n    \n    return 6.*m2;\n}\n\nvec2 mainSound(float time) {\n    float z = time*2.;\n\treturn getSounds(time, z);\n}",
				"name": "",
				"description": "",
				"type": "sound"
			}
		]
	}
}